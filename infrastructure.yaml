AWSTemplateFormatVersion: 2010-09-09
Description: Infrastructure setup

Parameters:
  VPCIdentifier:
    Type: String
    Description: VPC Identifier
    Default: '3114394F_VPC'

  LatestAL2023AmiId:
    Description: Latest EC2 Amazon Linux 2023 AMI from Systems Manager Parameter Store
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64'

  InstanceType:
    Type: String
    Default: t2.micro
    Description: EC2 instance type


  VPCNetworkAddress:
    Type: String
    Description: asd
    Default: 10.0.0.0/16

  SubnetOneNetworkAddress:
    Type: String
    Description: Network Address for Subnet One
    Default: 10.0.1.0/24

  SubnetTwoNetworkAddress:
    Type: String
    Description: Network Address for Subnet Two
    Default: 10.0.2.0/24

  BackupSubnetOneNetworkAddress:
    Type: String
    Description: Network Address for Backup Subnet One
    Default: 10.0.3.0/24

  BackupSubnetTwoNetworkAddress:
    Type: String
    Description: Network Address for Backup Subnet Two
    Default: 10.0.4.0/24

  

Resources:

############################################################################
# NETWORK LAYER 
############################################################################

  ##################
  # ProductionVPC
  # Layer Type: Network Layer 
  # Description:
  ##################

  ProductionVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCNetworkAddress
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref VPCIdentifier



  ##################
  # Production Subnet 1 
  # Layer Type: Network Layer 
  # Description:
  ##################

  ProductionVPCSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref SubnetOneNetworkAddress
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref ProductionVPC
      Tags:
        - Key: Name
          Value: "Subnet One"

  ##################
  # Production Subnet 2 
  # Layer Type: Network Layer 
  # Description:
  ##################
  ProductionVPCSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref SubnetTwoNetworkAddress
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: false
      VpcId: !Ref ProductionVPC
      Tags:
        - Key: Name
          Value: "Subnet Two"


  ##################
  # Production Backup Subnet 1 
  # Layer Type: Network Layer 
  # Description:
  ##################

  ProductionVPCBackupSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref BackupSubnetOneNetworkAddress
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      VpcId: !Ref ProductionVPC

  ##################
  # Production Subnet 2 
  # Layer Type: Network Layer 
  # Description:
  ##################
  ProductionVPCBackupSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref BackupSubnetTwoNetworkAddress
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      VpcId: !Ref ProductionVPC



############################################################################
## INTERNET GATEWAY
## Layer Type: Network Layer
############################################################################     
    
  ProductionVPCInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
        - Key: "Name"
          Value: "Production VPC Internet Gateway"


  AttachInternetGatewayToVPC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
        InternetGatewayId: 
          Ref: ProductionVPCInternetGateway
        VpcId: 
          Ref: ProductionVPC

############################################################################
## NAT GATEWAY
## Layer Type: Network Layer
############################################################################     

  ProductionVPCSubnetTwoNATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: 
        Fn::GetAtt: ['NatGatewayEIP', 'AllocationId']
      SubnetId: !Ref ProductionVPCSubnetOne
      Tags:
        - Key: Name
          Value: "Production VPC Subnet Two NAT Gateway"

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

############################################################################
##  PRODUCTION VPC ROUTING TABLE CONFIGURATION
############################################################################

  SubnetOneRoutingTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ProductionVPC
      Tags:
        - Key: Name
          Value: "Production VPC Routing Table"

  SubnetOneRoutingTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: 
        Ref: SubnetOneRoutingTable
      SubnetId:
        Ref: ProductionVPCSubnetOne

  RouteToInternet:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Fn::GetAtt: ['SubnetOneRoutingTable', 'RouteTableId']
      GatewayId: 
        Ref: ProductionVPCInternetGateway
      DestinationCidrBlock: '0.0.0.0/0'



############################################################################
##  SUBNET TWO SUBNET ROUTING TABLE CONFIGURATION
############################################################################

  SubnetTwoRoutingTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ProductionVPC
      Tags:
        - Key: Name
          Value: "Private Subnet Routing Table"

  SubnetTwoRoutingTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: 
        Ref: SubnetTwoRoutingTable
      SubnetId: 
        Ref: ProductionVPCSubnetTwo

  RouteNATGateway:
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref SubnetTwoRoutingTable
        DestinationCidrBlock: '0.0.0.0/0'
        NatGatewayId: !Ref ProductionVPCSubnetTwoNATGateway


############################################################################
# SECURITY LAYER 
############################################################################

  ##################
  # Web Server One Security Group
  # Layer Type: Security Layer 
  # Description:
  ##################
  WebServerOneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow Internet users to access HTTP (Port 80)
      VpcId: 
        Ref: ProductionVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: "Web Server One Security Group"


  ##################
  # Web Server Two Security Group
  # Layer Type: Security Layer 
  # Description:
  ##################

  WebServerTwoSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow Internet Users to access SSH (Port 22)
      VpcId: 
        Ref: ProductionVPC
      Tags:
        - Key: Name
          Value: "Web Server Two Security Group"

  WebServerTwoSecurityGroupIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: 
        Ref: WebServerTwoSecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0

  ##################
  # MySQL DB Security Group
  # Layer Type: Security Layer 
  # Description:
  ##################

  MySQLDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow only Web Server 1 and Web Server 2 to access database port 3306
      VpcId: 
        Ref: ProductionVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 
            Fn::GetAtt: [ProductionVPCSubnetOne, CidrBlock]
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 
            Fn::GetAtt: [ProductionVPCSubnetTwo, CidrBlock]
      Tags:
        - Key: Name
          Value: "MySQL DB Security Group"


############################################################################
## KEY PAIR (SECURITY LAYER)
############################################################################

  WebServerOneKeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: WebServerOneKeyPair

  WebServerTwoKeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: WebServerTwoKeyPair



############################################################################
# COMPUTE LAYER 
############################################################################

  ##################
  # Web Server One EC2
  # Layer Type: Compute Layer 
  # Description:
  ##################

  WebServerOne:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - install_and_configure
        install_and_configure:
          packages:
            yum:
              httpd: []
              telnet: []
          files:
            "/var/www/html/index.html":
              content: |
                <html>
                <body>
                  <h1>Hello From Your Web Server 1</h1>
                </body>
                </html>
              mode: "000644"
              owner: "apache"
              group: "apache"
          services:
            sysvinit:
              httpd:
                enabled: "true"
                ensureRunning: "true"
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref LatestAL2023AmiId
      KeyName: !Ref WebServerOneKeyPair
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref WebServerOneSecurityGroup
          SubnetId: !Ref ProductionVPCSubnetOne
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum update -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServerOne --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServerOne --region ${AWS::Region}
      Tags:
        - Key: Name
          Value: Web Server One

  ##################
  # Web Server Two EC2
  # Layer Type: Compute Layer 
  # Description:
  ##################

  WebServerTwo:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - install_and_configure
        install_and_configure:
          packages:
            yum:
              httpd: []
              telnet: []
          files:
            "/var/www/html/index.html":
              content: |
                <html>
                  <body>
                    <h1>Hello From Your Web Server 2</h1>
                  </body>
                </html>
              mode: "000644"
              owner: "apache"
              group: "apache"
          services:
            sysvinit:
              httpd:
                enabled: "true"
                ensureRunning: "true"
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref LatestAL2023AmiId
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref WebServerTwoSecurityGroup
          SubnetId: !Ref ProductionVPCSubnetOne
      KeyName: !Ref WebServerTwoKeyPair
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum update -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServerTwo --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServerTwo --region ${AWS::Region}
      Tags:
        - Key: Name
          Value: Web Server Two




############################################################################
# DATABASE LAYER 
############################################################################

  ##################
  # MYSQL Database
  # Layer Type: Database Layer 
  # Description:
  ##################


  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "MySQL DB Subnet Group"
      SubnetIds:
        - Ref: ProductionVPCSubnetTwo
        - Ref: ProductionVPCBackupSubnetTwo

#DB should be using subnet 2