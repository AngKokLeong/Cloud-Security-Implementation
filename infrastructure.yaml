AWSTemplateFormatVersion: 2010-09-09
Description: Infrastructure setup

Parameters:
  VPCIdentifier:
    Type: String
    Description: VPC Identifier
    Default: '3114394F_VPC'

  LatestAL2023AmiId:
    Description: Latest EC2 Amazon Linux 2023 AMI from Systems Manager Parameter Store
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64'

  InstanceType:
    Type: String
    Default: t2.micro
    Description: EC2 instance type


  VPCNetworkAddress:
    Type: String
    Description: asd
    Default: 10.0.0.0/16

  SubnetOneNetworkAddress:
    Type: String
    Description: Network Address for Subnet One
    Default: 10.0.1.0/24

  SubnetTwoNetworkAddress:
    Type: String
    Description: Network Address for Subnet Two
    Default: 10.0.2.0/24

  BackupSubnetOneNetworkAddress:
    Type: String
    Description: Network Address for Backup Subnet One
    Default: 10.0.3.0/24

  BackupSubnetTwoNetworkAddress:
    Type: String
    Description: Network Address for Backup Subnet Two
    Default: 10.0.4.0/24

  

Resources:

############################################################################
# NETWORK LAYER 
############################################################################

  ##################
  # ProductionVPC
  # Layer Type: Network Layer 
  # Description:
  ##################

  ProductionVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCNetworkAddress
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref VPCIdentifier



  ##################
  # Production Subnet 1 
  # Layer Type: Network Layer 
  # Description:
  ##################

  ProductionVPCSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref SubnetOneNetworkAddress
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref ProductionVPC

  ##################
  # Production Subnet 2 
  # Layer Type: Network Layer 
  # Description:
  ##################
  ProductionVPCSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref SubnetTwoNetworkAddress
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: false
      VpcId: !Ref ProductionVPC


  ##################
  # Production Backup Subnet 1 
  # Layer Type: Network Layer 
  # Description:
  ##################

  ProductionVPCBackupSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref BackupSubnetOneNetworkAddress
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      VpcId: !Ref ProductionVPC

  ##################
  # Production Subnet 2 
  # Layer Type: Network Layer 
  # Description:
  ##################
  ProductionVPCBackupSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref BackupSubnetTwoNetworkAddress
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      VpcId: !Ref ProductionVPC

############################################################################
##  PRODUCTION VPC ROUTING TABLE CONFIGURATION
############################################################################

  SubnetOneRoutingTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ProductionVPC
      Tags:
        - Key: Name
          Value: "Production VPC Routing Table"


  SubnetOneRoutingTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: 
        Ref: SubnetOneRoutingTable
      SubnetId:
        Ref: ProductionVPCSubnetOne

  SubnetTwoRoutingTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: 
        Ref: SubnetOneRoutingTable
      SubnetId: 
        Ref: ProductionVPCSubnetTwo

  #RouteOne:
  # Type: AWS::EC2::Route
  # Properties:
  #   RouteTableId: !Ref ProductionVPCRoutingTable
  #   GatewayId: !


############################################################################
##  BACKUP SUBNET ROUTING TABLE CONFIGURATION
############################################################################

  SubnetTwoRoutingTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ProductionVPC
      Tags:
        - Key: Name
          Value: "Private Subnet Routing Table"


############################################################################
##  SUBNET ONE ACCESS CONTROL LIST CONFIGURATION
############################################################################


  ##################
  # Subnet 1 ACL
  # Layer Type: Network Layer 
  # Description:
  ##################
  SubnetOneACL:
    Type: AWS::EC2::NetworkAcl
    Properties: 
      VpcId: 
        Ref: ProductionVPC
      Tags:
        - Key: Name
          Value: "Subnet One ACL"

  ##################
  # Subnet 1 ACL Association
  # Layer Type: Network Layer 
  # Description: Associate ACL to Subnet One
  ##################
  SubnetOneACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: 
        Ref: SubnetOneACL
      SubnetId: 
        Ref: ProductionVPCSubnetOne

  
  SubnetOneACLEntryOne:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: SubnetOneACL
      RuleNumber: 100
      RuleAction: allow
      Protocol: 6
      CidrBlock: 172.16.0.0/24
      PortRange:
        From: 22
        To: 22

  SubnetOneACLEntryTwo:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: SubnetOneACL
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  
  SubnetOneACLEntryThree:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: SubnetOneACL
      RuleNumber: 101
      Protocol: 6
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80


############################################################################
##  SUBNET TWO ACCESS CONTROL LIST CONFIGURATION
############################################################################

  ##################
  # Subnet 2 ACL
  # Layer Type: Network Layer 
  # Description:
  ##################
  SubnetTwoACL:
    Type: AWS::EC2::NetworkAcl
    Properties: 
      VpcId: 
        Ref: ProductionVPC
      Tags:
        - Key: Name
          Value: "Subnet Two ACL"


  SubnetTwoACLEntryOneInbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: SubnetOneACL
      RuleNumber: 102
      RuleAction: allow
      Egress: false
      Protocol: 6
      CidrBlock: 
        Fn::GetAtt: ['ProductionVPCSubnetOne', 'CidrBlock']
      PortRange:
        From: 3306
        To: 3306


  SubnetTwoACLEntryOneOutbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: SubnetOneACL
      RuleNumber: 102
      RuleAction: allow
      Egress: true
      Protocol: 6
      CidrBlock: 
        Fn::GetAtt: ['ProductionVPCSubnetOne', 'CidrBlock']
      PortRange:
        From: 3306
        To: 3306


  ##################
  # Subnet 2 ACL Association
  # Layer Type: Network Layer 
  # Description: Associate ACL to Subnet One
  ##################
  SubnetTwoACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: 
        Ref: SubnetTwoACL
      SubnetId: 
        Ref: ProductionVPCSubnetTwo

############################################################################
##  INTERNET GATEWAY
############################################################################     
    
  ProductionVPCInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
        - Key: "Name"
          Value: "Production VPC Internet Gateway"


  AttachInternetGatewayToVPC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
        InternetGatewayId: 
          Ref: ProductionVPCInternetGateway
        VpcId: 
          Ref: ProductionVPC

############################################################################
# SECURITY LAYER 
############################################################################


  ##################
  # Web Server One Security Group
  # Layer Type: Security Layer 
  # Description:
  ##################
  WebServerOneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow Internet users to access HTTP (Port 80)
      VpcId: 
        Ref: ProductionVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: "Web Server One Security Group"

  ##################
  # Web Server Two Security Group
  # Layer Type: Security Layer 
  # Description:
  ##################

  WebServerTwoSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow Internet Users to access SSH (Port 22)
      VpcId: 
        Ref: ProductionVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: "Web Server Two Security Group"


  ##################
  # MySQL DB Security Group
  # Layer Type: Security Layer 
  # Description:
  ##################

  MySQLDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow only Web Server 1 and Web Server 2 to access database port 3306
      VpcId: 
        Ref: ProductionVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 
            Fn::GetAtt: [ProductionVPCSubnetOne, CidrBlock]
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 
            Fn::GetAtt: [ProductionVPCSubnetTwo, CidrBlock]
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 
            Fn::GetAtt: [ProductionVPCSubnetOne, CidrBlock]
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 
            Fn::GetAtt: [ProductionVPCSubnetTwo, CidrBlock]
      Tags:
        - Key: Name
          Value: "MySQL DB Security Group"


############################################################################
## KEY PAIR (SECURITY LAYER)
############################################################################

  WebServerOneKeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: WebServerOneKeyPair

  WebServerTwoKeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: WebServerTwoKeyPair



############################################################################
# COMPUTE LAYER 
############################################################################


# Refer to https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html

  #WebServerLaunchTemplate:
  #  Type: AWS::EC2::LaunchTemplate
  #  Properties:
  #    LaunchTemplateData: #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html
  #    LaunchTemplateName: String
  #    TagSpecifications: #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatetagspecification.html
  #    VersionDescription: String

  WebServerTemplate:
    Type: AWS::EC2::LaunchTemplate
    Metadata: #https://stackoverflow.com/questions/54691327/cfn-init-for-cloudformation-launchtemplate
        AWS::CloudFormation::Init:
          configSets:
            default:
              - install_and_configure
          install_and_configure:
            packages:
              yum:
                httpd: []
                telnet: []
            files:
              "/var/www/html/index.html":
                content: |
                  <!DOCTYPE html>
                  <html>
                  <head>
                    <title>EC2 Instance Info</title>
                  </head>
                  <body>
                    <h1>Hello From Your <span id="instance-name"></h1>
                    <script>
                      fetch('http://169.254.169.254/latest/meta-data/tags/instance/Name')
                        .then(response => response.text())
                        .then(data => {
                          document.getElementById('instance-name').textContent = data;
                        })
                        .catch(error => {
                          console.error('Error:', error);
                          document.getElementById('instance-name').textContent = 'Unable to retrieve instance name';
                        });
                    </script>
                  </body>
                  </html>
                mode: "000644"
                owner: "apache"
                group: "apache"
            services:
              sysvinit:
                httpd:
                  enabled: "true"
                  ensureRunning: "true"

    Properties:
      LaunchTemplateName: WebServerTemplate
      LaunchTemplateData:
        ImageId: ami-0cff7528ff583bf9a  # Amazon Linux 2 AMI (HVM) - Kernel 5.10, SSD Volume Type
        InstanceType: !Ref InstanceType
        UserData: 
          Fn::Base64:
            !Sub |
              #!/bin/bash -xe
              yum update -y aws-cfn-bootstrap
              /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServerTemplate --region ${AWS::Region}
              /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServerTemplate --region ${AWS::Region}
      

  
  ##################
  # Web Server One EC2
  # Layer Type: Compute Layer 
  # Description:
  ##################     
  WebServerOne:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      LaunchTemplate: 
        LaunchTemplateId: 
          Ref: WebServerTemplate
        LaunchTemplateName: 
          Fn::GetAtt
        Version: String
      KeyName:
        Ref: WebServerOneKeyPair
      SecurityGroupIds: 
        - Ref: WebServerOneSecurityGroup
      SubnetId: 
        Ref: ProductionVPCSubnetOne
      Tags:
       - Key: "Name"
         Value: Web Server 1



  ##################
  # Web Server Two EC2
  # Layer Type: Compute Layer 
  # Description:
  ##################

  #WebServerTwo:
  #  Type: AWS::EC2::Instance
    #Properties:
    #  InstanceType: t2.micro
    #  LaunchTemplate:
      # Ref: WebServerLaunchTemplateSpecification
    # ImageId: 
      # Ref: LatestAL2023AmiId
    # KeyName:
      # Ref: WebServerTwoKeyPair
    # SecurityGroupIds: 
      #Ref: WebServerTwoSecurityGroup
    # SubnetId: 
      # Ref: ProductionVPCSubnetTwo
    # Tags:
      # - Key: "Name"
          #Value: Web Server 2



############################################################################
# DATABASE LAYER 
############################################################################

  ##################
  # MYSQL Database
  # Layer Type: Database Layer 
  # Description:
  ##################


